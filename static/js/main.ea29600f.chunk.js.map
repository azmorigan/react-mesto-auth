{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","utils/api.js","components/Popup.js","components/PopupWithForm.js","components/Input.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ConfirmationPopup.js","components/Login.js","components/Register.js","components/ProtectedRoute.js","images/success.svg","images/fail.svg","components/InfoTooltip.js","utils/auth.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","to","loggedIn","email","onClick","onSignOut","handleEnter","enter","enterTitle","CurrentUserContext","React","createContext","Card","currentUser","useContext","isOwn","_id","owner","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","onCardClick","name","link","alt","isOpen","src","onCardDeleteClick","id","onCardLike","type","aria-label","length","Main","avatar","onEditAvatar","onEditProfile","about","onAddPlace","cards","map","card","Footer","Date","getFullYear","ImagePopup","onClickOnOverlay","onClose","api","url","headers","this","_url","_headers","fetch","then","_checkResponse","job","method","body","JSON","stringify","data","cardId","setLike","removeLike","imageUrl","res","ok","json","Promise","reject","status","authorization","Popup","children","PopupWithForm","title","onSubmit","noValidate","buttonName","Input","onChange","e","EditProfilePopup","useState","setName","description","setDescription","useEffect","preventDefault","onUpdateUser","value","target","EditAvatarPopup","setAvatar","onUpdateAvatar","placeholder","AddPlacePopup","place","setPlace","setLink","ConfirmationPopup","onCardDelete","deleteCardId","Login","setEmail","password","setPassword","handleLogin","Register","handleRegister","ProtectedRoute","Component","component","InfoTooltip","enterStatus","success","fail","text","checkResponse","BASE_URL","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmationPopupOpen","setIsConfirmationPopupOpen","selectedCard","setSelectedCard","isInfoTooltipOpen","setIsInfoTooltipOpen","setCards","setCurrentUser","setDeleteCardId","setLoggedIn","setEnter","history","useHistory","isLoading","setIsLoading","buttonNameEdit","onLoad","isLoad","setEnterStatus","handleInfoTooltipOpen","closeAllPopups","handleClickOnOverlayClose","classList","contains","changeButtonName","button","renderLoading","state","handleEnterTitle","handleTokenCheck","localStorage","getItem","jwt","token","push","catch","err","console","log","getInitialCards","cardList","getProfileInfo","Provider","onKeyDown","key","tabIndex","removeItem","path","auth","setItem","toggleLikeCard","newCard","newCards","oldCard","setProfileInfo","finally","addCard","deleteCard","filter","setUserAvatar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea29600f.chunk.js","sourcesContent":["import {Link} from \"react-router-dom\";\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <header className=\"header\">\r\n      <Link to=\"/\" className=\"header__logo-link\"/>\r\n      {props.loggedIn\r\n        ? <>\r\n          <p className=\"header__email\">{props.email}</p>\r\n          <a\r\n            className=\"header__stage header__stage_logout\"\r\n            onClick={props.onSignOut}>Выйти</a>\r\n        </>\r\n        : <Link\r\n          onClick={props.handleEnter}\r\n          to={props.enter ? \"/sign-up\" : \"/sign-in\"}\r\n          className=\"header__stage\">\r\n          {props.loggedIn ? '' : props.enterTitle}\r\n        </Link>\r\n      }\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from \"react\"\r\nexport const CurrentUserContext = React.createContext()","import {CurrentUserContext} from \"../contexts/CurrentUserContext\";\r\nimport React from \"react\";\r\n\r\nfunction Card(props) {\r\n  // Клик на картинку\r\n  function handleClick() {\r\n    props.onCardClick(\r\n      {\r\n        name: props.name,\r\n        link: props.link,\r\n        alt: props.name,\r\n        isOpen: true\r\n      })\r\n  }\r\n  // Клик на лайк\r\n  function handleLikeClick() {\r\n    props.onCardLike(props)\r\n  }\r\n\r\n  const currentUser = React.useContext(CurrentUserContext)\r\n  const isOwn = currentUser._id === props.owner._id\r\n  const cardDeleteButtonClassName =\r\n    `element__remove ${isOwn && 'element__remove_visible'}`\r\n\r\n  const isLiked = props.likes.some(i => {\r\n    return i._id === currentUser._id\r\n  })\r\n  const cardLikeButtonClassName = `element__like ${isLiked && 'element__like_active'}`\r\n\r\n  function openConfirmPopupAndGetDeleteCardId() {\r\n    props.onCardDeleteClick(props.id)\r\n  }\r\n  return (\r\n    <li className=\"element\">\r\n      <img\r\n        onClick={handleClick}\r\n        src={props.link}\r\n        alt={props.name}\r\n        className=\"element__img\"/>\r\n      <button\r\n        onClick={openConfirmPopupAndGetDeleteCardId}\r\n        className={cardDeleteButtonClassName}/>\r\n      <div className=\"element__info\">\r\n        <h2 className=\"element__title\">{props.name}</h2>\r\n        <div className=\"element__like-container\">\r\n          <button onClick={handleLikeClick} className={cardLikeButtonClassName} type=\"button\" aria-label=\"Поставить лайк\"/>\r\n          <p className=\"element__like-count\">{props.likes.length}</p>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Card;","import Card from \"./Card\";\r\nimport React from \"react\";\r\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\r\n\r\nfunction Main(props) {\r\n  const currentUser = React.useContext(CurrentUserContext)\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <div className=\"profile__data\">\r\n          <div className=\"profile__avatar-container\">\r\n            <img className=\"profile__avatar\" src={currentUser.avatar} alt={currentUser.name}/>\r\n            <button className=\"profile__avatar-button\" onClick={props.onEditAvatar}/>\r\n          </div>\r\n\r\n          <div className=\"profile__info\">\r\n            <h1 className=\"profile__title\">{currentUser.name}</h1>\r\n            <button className=\"profile__edit-button\" type=\"button\" aria-label=\"Изменить профиль\"\r\n                    onClick={props.onEditProfile}/>\r\n            <p className=\"profile__subtitle\">{currentUser.about}</p>\r\n          </div>\r\n        </div>\r\n        <button className=\"profile__add-button\" type=\"button\" aria-label=\"Добавить карточку\"\r\n                onClick={props.onAddPlace}/>\r\n      </section>\r\n\r\n      <section className=\"elements\">\r\n        <ul className=\"elements__list\">\r\n          {props.cards.map((card) => (\r\n              <Card\r\n                onCardClick={props.onCardClick}\r\n                onCardLike={props.onCardLike}\r\n                onCardDeleteClick={props.onCardDeleteClick}\r\n                name={card.name}\r\n                link={card.link}\r\n                likes={card.likes}\r\n                id={card._id}\r\n                key={card._id}\r\n                owner={card.owner}\r\n              />\r\n            )\r\n          )}\r\n        </ul>\r\n      </section>\r\n\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Main;","function Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__copyright\">&copy; {new Date().getFullYear()} Mesto Russia</p>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;","function ImagePopup(props) {\r\n  return (\r\n    <div onClick={props.onClickOnOverlay} className={`popup popup_type_modal ${props.card.isOpen ? \"popup_opened\" : ''}`}>\r\n      <div className=\"modal\">\r\n        <img src={props.card.link} alt={props.card.name} className=\"modal__image\"/>\r\n        <p className=\"modal__title\">{props.card.name}</p>\r\n        <button className=\"close-button close-button_type_modal\" onClick={props.onClose}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImagePopup;","class Api {\r\n  constructor({url, headers}) {\r\n    this._url = url\r\n    this._headers = headers\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(this._url + 'cards/', {\r\n      headers: this._headers\r\n    })\r\n      .then(this._checkResponse)\r\n  }\r\n\r\n  getProfileInfo() {\r\n    return fetch(this._url + 'users/me/', {\r\n      headers: this._headers\r\n    })\r\n      .then(this._checkResponse)\r\n  }\r\n\r\n  setProfileInfo(name, job) {\r\n    return fetch(this._url + 'users/me/', {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: name,\r\n        about: job\r\n      })\r\n    })\r\n      .then(this._checkResponse)\r\n  }\r\n\r\n  addCard(data) {\r\n    return fetch(this._url + 'cards/', {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        link: data.link\r\n      })\r\n    })\r\n      .then(this._checkResponse)\r\n  }\r\n\r\n  deleteCard(data) {\r\n    return fetch(this._url + 'cards/' + data, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    })\r\n      .then(this._checkResponse)\r\n  }\r\n\r\n  setLike(cardId) {\r\n    return fetch(`${this._url}cards/likes/${cardId}`, {\r\n      method: \"PUT\",\r\n      headers: this._headers,\r\n    })\r\n      .then(this._checkResponse)\r\n  }\r\n\r\n  removeLike(cardId) {\r\n    return fetch(`${this._url}cards/likes/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    })\r\n      .then(this._checkResponse)\r\n  }\r\n\r\n  toggleLikeCard(cardId, isLiked) {\r\n    if (isLiked) {\r\n      return this.setLike(cardId)\r\n    } else {\r\n      return this.removeLike(cardId)\r\n    }\r\n  }\r\n\r\n  setUserAvatar(imageUrl) {\r\n    return fetch(this._url + 'users/me/avatar', {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: imageUrl\r\n      })\r\n    })\r\n      .then(this._checkResponse)\r\n  }\r\n\r\n  _checkResponse(res) {\r\n    if (res.ok) {\r\n      return res.json()\r\n    }\r\n    return Promise.reject(`Ошибка ${res.status}`);\r\n  }\r\n}\r\n\r\nexport const api = new Api({\r\n  url: \"https://mesto.nomoreparties.co/v1/cohort-20/\",\r\n  headers: {\r\n    authorization: 'afa481ae-bc0e-4856-9ec0-3e79ade90f5a',\r\n    'Content-Type': 'application/json',\r\n  }\r\n})\r\n\r\n","function Popup(props) {\r\n  return (\r\n    <div onClick={props.onClickOnOverlay}\r\n         className={`popup popup_type_${props.name} ${props.isOpen ? 'popup_opened' : ''}`}>\r\n      <div className={`popup__container popup__container_type_${props.name}`}>\r\n        {props.children}\r\n        <button\r\n          className=\"close-button\"\r\n          onClick={props.onClose}\r\n          type=\"button\"\r\n          aria-label=\"Закрыть всплывающее окно\"/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Popup","import Popup from \"./Popup\";\r\n\r\nfunction PopupWithForm(props) {\r\n  return (\r\n    <Popup {...props}>\r\n      <h2 className={`popup__title popup__title_type_${props.name}`}>{props.title}</h2>\r\n      <form\r\n        onSubmit={props.onSubmit}\r\n        className={`form form_type_${props.name}`}\r\n        name=\"formEdit\"\r\n        noValidate>\r\n        {props.children}\r\n        <button\r\n          type=\"submit\"\r\n          className={`form__button form__button_type_${props.name}`}\r\n        >{props.buttonName}</button>\r\n      </form>\r\n    </Popup>\r\n  )\r\n}\r\n\r\nexport default PopupWithForm;","import React from \"react\";\r\n\r\nfunction Input(props) {\r\n\r\n  function handleChange(e) {\r\n    props.onChange(e)\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <input\r\n      onChange={handleChange}\r\n      {...props}\r\n    />\r\n  <span id={`${props.id}-error`} className={`error error_type_${props.name}`}></span>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Input","import PopupWithForm from \"./PopupWithForm\";\r\nimport React from \"react\";\r\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\r\nimport Input from \"./Input\";\r\n\r\nfunction EditProfilePopup(props) {\r\n\r\n  const [name, setName] = React.useState('')\r\n  const [description, setDescription] = React.useState('')\r\n  const currentUser = React.useContext(CurrentUserContext)\r\n\r\n  function handleChangeName(e) {\r\n    setName(e.target.value)\r\n  }\r\n\r\n  function handleChangeDescription(e) {\r\n    setDescription(e.target.value)\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n    props.onUpdateUser({\r\n      name,\r\n      about: description\r\n    })\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    setName(currentUser.name)\r\n    setDescription(currentUser.about)\r\n  }, [props.isOpen, currentUser.name, currentUser.about])\r\n\r\n  return (\r\n    <PopupWithForm\r\n      onClickOnOverlay={props.onClickOnOverlay}\r\n      name={\"edit-profile\"}\r\n      title={\"Редактировать профиль\"}\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n      buttonName={props.buttonName}>\r\n      <Input\r\n        name=\"name\"\r\n        id=\"input-name\"\r\n        value={name}\r\n        onChange={handleChangeName}\r\n        className={\"form__input\"}\r\n        type={\"text\"}/>\r\n      <Input\r\n        name=\"job\"\r\n        id=\"input-job\"\r\n        value={description}\r\n        onChange={handleChangeDescription}\r\n        className={\"form__input\"}\r\n        type={\"text\"}/>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default EditProfilePopup","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport Input from \"./Input\";\r\n\r\nfunction EditAvatarPopup(props) {\r\n  const [avatar, setAvatar] = React.useState('')\r\n\r\n  function handleChangeAvatar(e) {\r\n    setAvatar(e.target.value)\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n    props.onUpdateAvatar({avatar})\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    setAvatar('')\r\n  }, [props.isOpen])\r\n\r\n  return (\r\n    <PopupWithForm\r\n      onClickOnOverlay={props.onClickOnOverlay}\r\n      name={\"edit-avatar\"}\r\n      title={\"Обновить аватар\"}\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n      buttonName={props.buttonName}>\r\n      <Input\r\n        name=\"avatar\"\r\n        id=\"input-avatar\"\r\n        value={avatar}\r\n        onChange={handleChangeAvatar}\r\n        type={\"url\"}\r\n        placeholder=\"Ссылка на картинку\"\r\n        className={\"form__input\"}/>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default EditAvatarPopup","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport Input from \"./Input\";\r\n\r\nfunction AddPlacePopup(props) {\r\n  const [place, setPlace] = React.useState('')\r\n  const [link, setLink] = React.useState('')\r\n\r\n  function handleChangePlace(e) {\r\n    setPlace(e.target.value)\r\n  }\r\n\r\n  function handleChangeLink(e) {\r\n    setLink(e.target.value)\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n    props.onAddPlace({name: place, link})\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    setPlace('')\r\n    setLink('')\r\n  }, [props.isOpen])\r\n\r\n  return (\r\n    <PopupWithForm\r\n      onClickOnOverlay={props.onClickOnOverlay}\r\n      name={\"add-card\"}\r\n      title={\"Новое место\"}\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n      buttonName={props.buttonName}>\r\n\r\n      <Input\r\n        name=\"place\"\r\n        id=\"input-place\"\r\n        value={place}\r\n        onChange={handleChangePlace}\r\n        type={\"text\"}\r\n        placeholder=\"Название\"\r\n        className={\"form__input form__input_type_add-card\"}/>\r\n\r\n      <Input\r\n        name=\"link\"\r\n        id=\"input-link\"\r\n        value={link}\r\n        onChange={handleChangeLink}\r\n        type={\"url\"}\r\n        placeholder=\"Ссылка на картинку\"\r\n        className={\"form__input form__input_type_add-card\"}/>\r\n\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default AddPlacePopup","import PopupWithForm from \"./PopupWithForm\";\r\nimport React from \"react\";\r\n\r\nfunction ConfirmationPopup(props) {\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n    props.onCardDelete(props.deleteCardId)\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      onClickOnOverlay={props.onClickOnOverlay}\r\n      name={\"delete-card\"}\r\n      title={\"Вы уверены?\"}\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n      buttonName={props.buttonName}>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default ConfirmationPopup","import Input from \"./Input\";\r\nimport React from 'react';\r\n\r\nfunction Login(props) {\r\n  const [email, setEmail] = React.useState('')\r\n  const [password, setPassword] = React.useState('')\r\n\r\n  function handleChangeEmail(e) {\r\n    setEmail(e.target.value)\r\n  }\r\n\r\n  function handleChangePassword(e) {\r\n    setPassword(e.target.value)\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n    props.handleLogin(email, password)\r\n  }\r\n\r\n  return (\r\n    <div className=\"enter\">\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        className=\"enter__form\">\r\n        <h2 className=\"enter__title\">Вход</h2>\r\n        <Input\r\n          value={email}\r\n          onChange={handleChangeEmail}\r\n          name={\"email\"}\r\n          className={\"enter__input\"}\r\n          placeholder={\"Email\"}\r\n          type={\"email\"}/>\r\n        <Input\r\n          value={password}\r\n          onChange={handleChangePassword}\r\n          name={\"password\"}\r\n          className={\"enter__input\"}\r\n          placeholder={\"Пароль\"}\r\n          type={\"password\"}/>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"enter__button\">\r\n          Войти\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login","import {Link} from \"react-router-dom\";\r\nimport Input from \"./Input\";\r\nimport React from 'react';\r\n\r\nfunction Register(props) {\r\n  const [email, setEmail] = React.useState('')\r\n  const [password, setPassword] = React.useState('')\r\n\r\n  function handleChangeEmail(e) {\r\n    setEmail(e.target.value)\r\n  }\r\n\r\n  function handleChangePassword(e) {\r\n    setPassword(e.target.value)\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n    props.handleRegister(email, password)\r\n  }\r\n  return (\r\n    <div className=\"enter\">\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        className=\"enter__form\">\r\n        <h2 className=\"enter__title\">Регистрация</h2>\r\n        <Input\r\n          value={email}\r\n          onChange={handleChangeEmail}\r\n          name={\"email\"}\r\n          className={\"enter__input\"}\r\n          placeholder={\"Email\"}\r\n          type={\"email\"}/>\r\n        <Input\r\n          value={password}\r\n          onChange={handleChangePassword}\r\n          name={\"password\"}\r\n          className={\"enter__input\"}\r\n          placeholder={\"Пароль\"}\r\n          type={\"password\"}/>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"enter__button\">\r\n          Зарегистрироваться\r\n        </button>\r\n        <p className=\"enter__subtitle\">Уже зарегистрированы?\r\n          <Link\r\n            onClick={props.handleEnter}\r\n            to=\"/sign-in\"\r\n            className={\"enter__link\"}> Войти</Link>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register","import React from \"react\";\r\nimport {Route, Redirect} from 'react-router-dom';\r\n\r\nfunction ProtectedRoute({component: Component, ...props}) {\r\n  return (\r\n    <Route>\r\n      {\r\n        () =>\r\n          props.loggedIn ? <Component {...props}/> : <Redirect to=\"/sign-in\"/>\r\n      }\r\n    </Route>\r\n  )\r\n}\r\n\r\nexport default ProtectedRoute","export default __webpack_public_path__ + \"static/media/success.1b6082f8.svg\";","export default __webpack_public_path__ + \"static/media/fail.df8eddf6.svg\";","import Popup from \"./Popup\";\r\nimport success from \"../images/success.svg\";\r\nimport fail from \"../images/fail.svg\";\r\n\r\nfunction InfoTooltip(props) {\r\n  return (\r\n    <Popup\r\n      onClickOnOverlay={props.onClickOnOverlay}\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      name={\"info-tooltip\"}>\r\n      <img\r\n        src={props.enterStatus ? success : fail}\r\n        alt=\"Ответ\"\r\n        className=\"popup__state-img\"/>\r\n      <p\r\n        className=\"popup__answer\">\r\n        {props.enterStatus\r\n          ? props.text.success\r\n          : props.text.fail}\r\n      </p>\r\n    </Popup>\r\n  )\r\n}\r\n\r\nexport default InfoTooltip","function checkResponse(data) {\r\n  if (data.ok) {\r\n    return data.json()\r\n  } else {\r\n    return Promise.reject(data.status)\r\n  }\r\n}\r\n\r\nexport const BASE_URL = \"https://auth.nomoreparties.co\"\r\n\r\nexport const register = (email, password) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({email, password})\r\n  })\r\n    .then(res => checkResponse(res))\r\n}\r\n\r\nexport const authorize = (email, password) => {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({email, password})\r\n  })\r\n    .then(res => checkResponse(res))\r\n}\r\n\r\nexport const checkToken = (token) => {\r\n  return fetch(`${BASE_URL}/users/me`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`,\r\n    }\r\n  })\r\n    .then(res => checkResponse(res))\r\n}","import Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport Footer from \"./Footer\";\r\nimport ImagePopup from \"./ImagePopup\";\r\nimport React from \"react\";\r\nimport {api} from \"../utils/api\";\r\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\r\nimport EditProfilePopup from \"./EditProfilePopup\";\r\nimport EditAvatarPopup from \"./EditAvatarPopup\";\r\nimport AddPlacePopup from \"./AddPlacePopup\";\r\nimport ConfirmationPopup from \"./ConfirmationPopup\";\r\nimport Login from \"./Login\";\r\nimport Register from \"./Register\";\r\nimport {Route, Switch, Redirect, useHistory, Link} from 'react-router-dom';\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\nimport InfoTooltip from \"./InfoTooltip\";\r\nimport * as auth from \"../utils/auth\";\r\n\r\nfunction App() {\r\n  // Состояне попапов (открытие/закрытие)\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false)\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false)\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false)\r\n  const [isConfirmationPopupOpen, setIsConfirmationPopupOpen] = React.useState(false)\r\n  const [selectedCard, setSelectedCard] = React.useState({name: '', link: '', alt: '', isOpen: false})\r\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React\r\n    .useState(false)\r\n\r\n  // Список карточек\r\n  const [cards, setCards] = React.useState([])\r\n\r\n  // Данные профиля\r\n  const [currentUser, setCurrentUser] = React.useState({\r\n    name: '',\r\n    about: '',\r\n    avatar: ''\r\n  })\r\n\r\n  // id удаляемой карточки\r\n  const [deleteCardId, setDeleteCardId] = React.useState('')\r\n\r\n  // Зашел ли пользователь в аккаунт\r\n  const [loggedIn, setLoggedIn] = React.useState(false)\r\n\r\n  // Подпись в хэдере для незареганных и незалогиненных\r\n  const [enter, setEnter] = React.useState(true)\r\n  const enterTitle = enter ? \"Зарегистрироваться\" : \"Войти\"\r\n\r\n  const history = useHistory()\r\n  // Email пользователя\r\n  const [email, setEmail] = React.useState('')\r\n  // Данные для анимации загрузки\r\n  const [isLoading, setIsLoading] = React.useState(false)\r\n  const buttonNameConfirm = ({onLoad: \"Удаление...\", isLoad: \"Да\"})\r\n  const buttonNameEdit = ({onLoad: \"Сохранение...\", isLoad: \"Сохранить\"})\r\n  const buttonNameAddPlace = ({onLoad: \"Создание...\", isLoad: \"Создать\"})\r\n\r\n  // Пробрасывается в InfoTooltip и открывает соотв. попап\r\n  const [enterStatus, setEnterStatus] = React.useState(''\r\n  )\r\n  // Текст для всплывающей подсказки\r\n  const infoTooltipText = {\r\n    success: \"Вы успешно зарегистрировались!\",\r\n    fail: \"Что-то пошло не так! Попробуйте ещё раз.\"\r\n  }\r\n  // Открыть попапы\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true)\r\n  }\r\n\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true)\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true)\r\n  }\r\n\r\n  function handleConfirmationPopup(id) {\r\n    setIsConfirmationPopupOpen(true)\r\n    setDeleteCardId(id)\r\n  }\r\n\r\n  function handleInfoTooltipOpen() {\r\n    setIsInfoTooltipOpen(true)\r\n  }\r\n\r\n  // Нажать на картинку\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card)\r\n  }\r\n\r\n  // Закрыть все попапы\r\n  function closeAllPopups() {\r\n    setIsEditAvatarPopupOpen(false)\r\n    setIsEditProfilePopupOpen(false)\r\n    setIsAddPlacePopupOpen(false)\r\n    setIsConfirmationPopupOpen(false)\r\n    setSelectedCard({isOpen: false})\r\n    setIsInfoTooltipOpen(false)\r\n  }\r\n\r\n  // Обновление имени и описания профиля\r\n  function handleUpdateUser({name, about}) {\r\n    renderLoading(true)\r\n    api.setProfileInfo(name, about)\r\n      .then(res => {\r\n          setCurrentUser(res)\r\n          closeAllPopups()\r\n        }\r\n      )\r\n      .catch(err => console.log(err))\r\n      .finally(res => {\r\n        renderLoading(false)\r\n      })\r\n  }\r\n\r\n  // Обновление аватара\r\n  function handleUpdateAvatar({avatar}) {\r\n    renderLoading(true)\r\n    api.setUserAvatar(avatar)\r\n      .then(res => {\r\n        setCurrentUser(res)\r\n        closeAllPopups()\r\n      })\r\n      .catch(err => console.log(err))\r\n      .finally(res => {\r\n        renderLoading(false)\r\n      })\r\n  }\r\n\r\n  // Добавление карточки\r\n  function handleAddPlace(data) {\r\n    renderLoading(true)\r\n    api.addCard(data)\r\n      .then(newCard => {\r\n        setCards([newCard, ...cards])\r\n        closeAllPopups()\r\n      })\r\n      .catch(err => console.log(err))\r\n      .finally(res => {\r\n        renderLoading(false)\r\n      })\r\n  }\r\n  // Поставить лайк\r\n  function handleCardLike(card) {\r\n    // card - карточка, которую отправляем через PUT\r\n    // newCard - лайкнутая карточка с обновленным массивом likes\r\n    // oldCard - любая карточка из старого массива\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id)\r\n    api.toggleLikeCard(card.id, !isLiked)\r\n      .then((newCard) => {\r\n        const newCards = cards.map((oldCard) => {\r\n          return oldCard._id === card.id ? newCard : oldCard\r\n        })\r\n        setCards(newCards)\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  // Удаление карточки\r\n  function handleCardDelete(cardId) {\r\n    renderLoading(true)\r\n    api.deleteCard(cardId)\r\n      .then(res => {\r\n        const newCards = cards.filter(oldCard => oldCard._id !== cardId)\r\n        setCards(newCards)\r\n        closeAllPopups()\r\n      })\r\n      .catch(err => console.log(err))\r\n      .finally(res => {\r\n        renderLoading(false)\r\n      })\r\n  }\r\n\r\n  // Баг: если зажать курсор на попапе и отпустить на оверлее, то закроется попап\r\n  // Закрытие по клику на оверлей\r\n  function handleClickOnOverlayClose(e) {\r\n    if (e.target.classList.contains('popup')) {\r\n      closeAllPopups()\r\n    }\r\n  }\r\n\r\n  // Закрытие по ESC\r\n  function handleEscClose(e) {\r\n    if (e.key === 'Escape') {\r\n      closeAllPopups()\r\n    }\r\n  }\r\n\r\n  // Изменение текста кнопки\r\n  function changeButtonName(button) {\r\n    return isLoading ? button.onLoad : button.isLoad\r\n  }\r\n\r\n  // Баг: т.к. попап закрывается медленно, а renderLoading(false) срабатывает мгновенно, то при закрытии попапа видно изменение текста кнопки\r\n  function renderLoading(state) {\r\n    setIsLoading(state)\r\n  }\r\n\r\n  // Изменить подпись в хэдере при нажатии на нее\r\n  function handleEnterTitle() {\r\n    setEnter(!enter)\r\n  }\r\n  // Регистрация\r\n  function handleRegister(email, password) {\r\n    auth.register(email, password)\r\n      .then(res => {\r\n        if (res) {\r\n          setEnterStatus(true)\r\n          handleInfoTooltipOpen()\r\n          history.push('/sign-in')\r\n        }\r\n      })\r\n      .catch(err => {\r\n        setEnterStatus(false)\r\n        handleInfoTooltipOpen()\r\n      })\r\n  }\r\n\r\n  // Вход в аккаунт\r\n  function handleLogin(email, password) {\r\n    auth.authorize(email, password)\r\n      .then(res => {\r\n        localStorage.setItem('jwt', res.token)\r\n        setLoggedIn(true)\r\n        setEmail(email)\r\n        history.push('/')\r\n      })\r\n      .catch(err => {\r\n        setEnterStatus(false)\r\n        handleInfoTooltipOpen()\r\n      })\r\n  }\r\n  // Проверка токена, автом. вход, если до этого авторизовался\r\n  function handleTokenCheck() {\r\n    if (localStorage.getItem('jwt')) {\r\n      const jwt = localStorage.getItem('jwt')\r\n      auth.checkToken(jwt)\r\n        .then(res => {\r\n          setLoggedIn(true)\r\n          setEmail(res.data.email)\r\n          history.push('/')\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n  }\r\n\r\n  function handleSignOut() {\r\n    localStorage.removeItem('jwt')\r\n    setEmail('')\r\n    history.push('/sign-in')\r\n    setLoggedIn(false)\r\n  }\r\n\r\n  // Загрузить и отрисовать карточки\r\n  React.useEffect(() => {\r\n    api.getInitialCards()\r\n      .then((cardList) => {\r\n        setCards(cardList)\r\n      })\r\n      .catch(err => err.status)\r\n  }, [])\r\n\r\n  // Загрузить и установить данные профиля\r\n  React.useEffect(() => {\r\n    api.getProfileInfo()\r\n      .then(res => setCurrentUser(res))\r\n      .catch(err => err.status)\r\n  }, [])\r\n\r\n  // Проверка токена при отрисовке App\r\n  React.useEffect(() => {\r\n    handleTokenCheck()\r\n  }, [])\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className=\"root__page\" onKeyDown={handleEscClose} tabIndex={0}>\r\n\r\n        <Header\r\n          enter={enter}\r\n          enterTitle={enterTitle}\r\n          handleEnter={handleEnterTitle}\r\n          loggedIn={loggedIn}\r\n          onSignOut={handleSignOut}\r\n          email={email}/>\r\n\r\n        <Switch>\r\n\r\n          <Route path=\"/sign-in\">\r\n            <Login handleLogin={handleLogin}/>\r\n          </Route>\r\n\r\n          <Route path=\"/sign-up\">\r\n            <Register\r\n              handleRegister={handleRegister}\r\n              handleEnter={handleEnterTitle}/>\r\n          </Route>\r\n\r\n          <ProtectedRoute\r\n            path={\"/\"}\r\n            loggedIn={loggedIn}\r\n            component={Main}\r\n            onEditProfile={handleEditProfileClick}\r\n            onAddPlace={handleAddPlaceClick}\r\n            onEditAvatar={handleEditAvatarClick}\r\n            onCardClick={handleCardClick}\r\n            cards={cards}\r\n            onCardLike={handleCardLike}\r\n            onCardDeleteClick={handleConfirmationPopup}\r\n          />\r\n\r\n          <Route>\r\n            {loggedIn ? <Redirect to=\"/\"/> : <Redirect to=\"/sign-in\"/>}\r\n          </Route>\r\n\r\n        </Switch>\r\n        {loggedIn && <Footer/>}\r\n\r\n        <InfoTooltip\r\n          isOpen={isInfoTooltipOpen}\r\n          onClose={closeAllPopups}\r\n          onClickOnOverlay={handleClickOnOverlayClose}\r\n          enterStatus={enterStatus}\r\n          text={infoTooltipText}/>\r\n\r\n        <ImagePopup\r\n          onClickOnOverlay={handleClickOnOverlayClose}\r\n          card={selectedCard}\r\n          onClose={closeAllPopups}/>\r\n\r\n        <EditProfilePopup\r\n          onClickOnOverlay={handleClickOnOverlayClose}\r\n          isOpen={isEditProfilePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateUser={handleUpdateUser}\r\n          buttonName={changeButtonName(buttonNameEdit)}/>\r\n\r\n        <AddPlacePopup\r\n          onClickOnOverlay={handleClickOnOverlayClose}\r\n          isOpen={isAddPlacePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onAddPlace={handleAddPlace}\r\n          buttonName={changeButtonName(buttonNameAddPlace)}/>\r\n\r\n        <ConfirmationPopup\r\n          onClickOnOverlay={handleClickOnOverlayClose}\r\n          isOpen={isConfirmationPopupOpen}\r\n          onClose={closeAllPopups}\r\n          onCardDelete={handleCardDelete}\r\n          deleteCardId={deleteCardId}\r\n          buttonName={changeButtonName(buttonNameConfirm)}/>\r\n\r\n        <EditAvatarPopup\r\n          onClickOnOverlay={handleClickOnOverlayClose}\r\n          isOpen={isEditAvatarPopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateAvatar={handleUpdateAvatar}\r\n          buttonName={changeButtonName(buttonNameEdit)}/>\r\n\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}